<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"  
    xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms" xmlns:lang="http://www.springframework.org/schema/lang"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd    
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd    
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd    
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd    
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd    
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd    
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd    
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd    
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd    
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd    
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd    
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"  >  
        

    <mvc:interceptors>  
     	<bean class="com.readinglife.framework.interceptor.log.WebLoggerInterceptor" /> 
     	<bean class="com.readinglife.framework.interceptor.security.SecurityInterceptor" /> 
    </mvc:interceptors>  
    
<!--       <context:annotation-config />
	<context:component-scan base-package="com.readinglife.framework.interceptor.log" />
	<aop:aspectj-autoproxy/>	
  
    <bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />  
    <bean id="serviceLoggerInterceptor" class="com.readinglife.framework.interceptor.log.ServiceLoggerInterceptor" /> 
 	 -->
 	 
 	 
<!--     <context:annotation-config />
	<context:component-scan base-package="com.readinglife.framework.interceptor.log" />
	<aop:aspectj-autoproxy/>	
	自动代理创建器，自动将@Aspect注解切面类织入到目标bean中
	<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />
	引入切面类
	<bean id="myInterceptor" class="com.readinglife.framework.interceptor.log.MyInterceptor"></bean> -->
    
    
<!--     <aop:config proxy-target-class="true">
		<aop:aspect ref="serviceLoggerInterceptor" order="0" id="doManager">
			<aop:after-throwing method="afterThrowing" pointcut-ref="execution(* com.readinglife.*.service.*.*(..))" throwing="ex"/>
			<aop:after-returning method="afterReturing" pointcut-ref="execution(* com.readinglife.*.service.*.*(..))" returning="val"/>
			<aop:before method="before" pointcut-ref="execution(* com.readinglife.*.service.*.*(..))" />
		</aop:aspect>
	</aop:config>
     -->
</beans>