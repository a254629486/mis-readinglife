<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"  
    xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms" xmlns:lang="http://www.springframework.org/schema/lang"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd    
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd    
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd    
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd    
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd    
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd    
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd    
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd    
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd    
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd    
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd    
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"  >  
  
    <context:component-scan base-package="com" />
	<!--配置spring 注解 -->
	<context:annotation-config />
	<!-- 默认的注解映射的支持 -->
	<!-- <mvc:annotation-driven /> -->

  	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="org.springframework.web.method.ForBeanArgumentResolver" />
		</mvc:argument-resolvers>
		<mvc:message-converters register-defaults="true">
			<bean class="com.readinglife.framework.web.UTF8StringHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven> 
	
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	<util:properties id="dataSourceProps" location="classpath:./jdbc.properties"/>
	<util:properties id="cfgProps" location="classpath:./cfg.properties"/>
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <property name="driverClassName" >
        	<value>#{dataSourceProps['jdbc.driverClassName']}</value>
        </property>
        <property name="url">
        	<value>#{dataSourceProps['jdbc.url']}</value>
        </property>
        <property name="username" value="#{dataSourceProps['jdbc.username']}" />
        <property name="password" value="#{dataSourceProps['jdbc.password']}" />
    </bean>
    <!-- 配置 sqlSessionFactory  org.mybatis.spring.SqlSessionFactoryBean-->
	<bean id="msqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:/com/**/dao/impl/*Mapper.xml</value>
				<value>classpath*:/com/**/dao/impl/*DAO.xml</value>
			</list>
		</property>
	</bean>
   <!-- 扫描basePackage下所有接口, 动态生成MyBatis Dao接口实现 -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <property name="basePackage" value="com.**.dao" />
     <property name="sqlSessionFactory"  ref="msqlSessionFactory"/>  
   </bean>
   <!-- 配置数据源 -->
   <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
       <property name="dataSource" ref="dataSource"/> 
   </bean> 
   <!-- 事物 -->
   <tx:annotation-driven transaction-manager="transactionManager"/>

	
	<!-- 视图解释类 -->  
<!--     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">   -->
<!--         <property name="prefix" value="/WEB-INF/pages/"/>   -->
<!--         <property name="suffix" value=".jsp"/>可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑    -->
<!--         <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />   -->
<!--     </bean>      -->
    <!--     针对freemarker的视图配置 -->
    <bean id="freemarkerConfig" 
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/pages/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>
    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true" />
      <!--   <property name="prefix" value="" />  -->
        <property name="suffix" value=".ftl" />
        <property name="contentType" value="text/html;charset=UTF-8"></property>
        <property name="requestContextAttribute" value="request" />
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="exposeRequestAttributes" value="true" />
        <property name="exposeSessionAttributes" value="true" />
    </bean>
    <!-- 处理静态资源 -->
	<mvc:resources mapping="/static/**" location="/WEB-INF/static/"  />


	<bean name="memcachedClient" class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean">
		<property name="servers">
			<value>#{dataSourceProps['memcached.url']}  </value>
		</property>
	</bean>
	<bean id="SpringBeanUtil"  class="com.readinglife.common.spring.SpringBeanUtil" scope="singleton" ></bean> 
	
	<!-- hessian annotation -->
	<bean id="servicesScanner"  class="com.readinglife.scanner.hessian.annotation.HessianServiceScanner">
	   <property name="basePackage" value="com.readinglife.**.impl"></property>
	</bean>
	<!-- 拦截器 -->
	<mvc:annotation-driven>
    	<mvc:message-converters>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	                <property name="objectMapper" ref="customObjectMapper"/>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	<!-- json 转换类 -->
	<bean id="customObjectMapper" class="com.readinglife.tools.json.mapper.CustomObjectMapper"/>
	
</beans>