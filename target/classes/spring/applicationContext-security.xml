<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"  
    xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms" xmlns:lang="http://www.springframework.org/schema/lang"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd    
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd    
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd    
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd    
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd    
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd    
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd    
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd    
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd    
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd    
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd    
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"  >

	 
	<!-- 认证数据库存储-->
    <bean id="defaultRealm" class="com.system.service.impl.DefaultAuthRealm">
		<property name="timeout" >
        	<value>#{dataSourceProps['session.timeout']}</value>
        </property>
    </bean>
    <bean id="secureRemoteInvocationExecutor" class="org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!-- 权限管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
   	   <property name="authenticator" ref="authenticator" />
   	   <property name="sessionManager" ref="sessionManager" />
<!--    	   <property name="cacheManager" ref="cacheManager"/> -->
       <property name="realms">
           <list>
              <ref bean="defaultRealm"/>
           </list>
       </property>
    </bean>
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
       <property name="securityManager" ref="securityManager"/>
       <property name="loginUrl" value="/login"/>
       <property name="successUrl" value="/main"/>
       <property name="unauthorizedUrl" value="/unauth"/>
       <!-- 读取自定义权限内容-->
       <property name="filterChainDefinitions" value="#{authService.loadFilterChainDefinitions()}" />   
     
    </bean>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    
 	<bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
        <property name="authenticationListeners">
            <list>
                <bean class="com.system.security.listener.DefaultAuthenticationListener" />
            </list>
        </property>
    </bean>
    
 	<bean id="$kaptcha" class="com.system.security.filter.KaptchaFilter" />
    <bean id="$authc" class="com.system.security.filter.RolesFilter"/>
 
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="globalSessionTimeout" >
        	<value>#{dataSourceProps['session.timeout']}</value>
        </property>
<!-- 	    <property name="sessionDAO" ref="shiroSessionDAO"/> -->
	    <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
	    <property name="sessionValidationSchedulerEnabled" value="true"/>
	    <property name="sessionIdCookie" ref="wapsession"/>
	</bean>
	<bean id="wapsession" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg name="name" value="WAPSESSIONID"/>
	</bean>
    <bean id="sessionValidationScheduler"
	      class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
	    <property name="interval"  value="3600000"/>
	    <property name="sessionManager" ref="sessionManager"/>
	</bean>
	<bean id="shiroSessionDAO" class="com.system.service.impl.ShiroSessionDAO">
<!-- 	    <constructor-arg name="useMemCache" value="true"/>     -->
<!-- 	    <property name="timeout" > -->
<!--         	<value>#{dataSourceProps['session.timeout']}</value> -->
<!--         </property> -->
<!-- 	    <property name="sessionPrefix" value="session-"/> -->
	</bean>
	 
</beans>